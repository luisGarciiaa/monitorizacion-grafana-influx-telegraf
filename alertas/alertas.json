{
    "apiVersion": 1,
    "groups": [
        {
            "orgId": 1,
            "name": "minuto",
            "folder": "Alertas",
            "interval": "1m",
            "rules": [
                {
                    "uid": "ee3jsimfn0c1sd",
                    "title": "CPU>80%",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "fe2r5unjgi3uoa",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"DatosPrueba\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_idle\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _value: 100.0 - r._value }))\n  |> yield(name: \"mean\")\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                80
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "5m",
                    "annotations": {
                        "description": "🚨 **Estado de la Alerta** 🚨\n\nDetalles del servidor afectado:\n- 🖥️ Servidor: {{ $labels.host }}\n- ⚠️ Uso de CPU: {{ $values.B.Value }}%\n\nPor favor, revisa el estado del servidor y toma las acciones necesarias para reducir la carga de la CPU.",
                        "summary": "🚨 Alerta de CPU alta en {{ $labels.host }}: Uso superior al 80%"
                    },
                    "labels": {
                        "host": "{{ $labels.host }}",
                        "status_code": "{{ $values.B.Value }}"
                    },
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "grafana-default-email"
                    }
                },
                {
                    "uid": "ee54yvzhlyjgga",
                    "title": "cambio en servicio",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "fe2r5unjgi3uoa",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"DatosPrueba\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop) // Rango de tiempo dinámico del panel\n  |> filter(fn: (r) => r[\"_measurement\"] == \"servicio_gen\") // Filtra los datos de 'servicio_gen'\n  |> filter(fn: (r) => r[\"_field\"] == \"status_code\") // Filtro para los códigos de estado\n  |> group(columns: [\"url\"]) // Agrupa por URL\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\") // Reestructura los datos para 'status_code'\n  |> keep(columns: [\"_time\", \"url\", \"status_code\", \"nombre\", \"keywords\"]) // Conserva solo las columnas necesarias\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                300
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "1m",
                    "annotations": {
                        "description": "🚨 **ESTADO DE LA ALERTA** 🚨\n\n- URL: {{ $labels.url }}\n- Código de Estado: {{ $values.B.Value }}\n\nVerifica el estado del servicio lo antes posible.",
                        "summary": "🚨 Alerta para el servicio {{ $labels.url }} : Código de Estado {{ $values.B.Value }}"
                    },
                    "labels": {
                        "nombre": "{{ $labels.nombre }}",
                        "status_code": "{{ $values.B.Value }}",
                        "url": "{{ $labels.url }}"
                    },
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "grafana-default-email"
                    }
                },
                {
                    "uid": "de6masrfykjy8b",
                    "title": "cambio en docker",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "fe2r5unjgi3uoa",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"DatosPrueba\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop) // Rango de tiempo dinámico del panel\n  |> filter(fn: (r) => r[\"_measurement\"] == \"docker_gen\") // Filtra los datos de 'docker_gen'\n  |> filter(fn: (r) => r[\"_field\"] == \"status_code\") // Filtro para los códigos de estado\n  |> group(columns: [\"nombre\"]) // Agrupa por el nombre del contenedor\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\") // Reestructura los datos para 'status_code'\n  |> keep(columns: [\"_time\", \"nombre\", \"status_code\", \"keywords\"]) // Conserva solo las columnas necesarias\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                300
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "1m",
                    "annotations": {
                        "description": "🚨 **ESTADO DE LA ALERTA** 🚨\n\n- Contenedor: {{ $labels.nombre }}\n- Código de Estado: {{ $values.B.Value }}\n\nVerifica el estado del contenedor lo antes posible.",
                        "summary": "🚨 Alerta para {{ $labels.nombre }}: Código de Estado {{ $values.B.Value }}"
                    },
                    "labels": {
                        "nombre": "{{ $labels.nombre }}",
                        "status_code": "{{ $values.B.Value }}"
                    },
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "grafana-default-email"
                    }
                },
                {
                    "uid": "ae6q2vtgdc4qof",
                    "title": "Memoria>90%",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "fe2r5unjgi3uoa",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"DatosPrueba\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\")\n  |> filter(fn: (r) => r[\"_field\"] == \"free\" or r[\"_field\"] == \"used\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({\n        _time: r._time,\n        _value: float(v: r[\"used\"]) / (float(v: r[\"free\"]) + float(v: r[\"used\"])) * 100.0, // Asegura que todos los valores sean float\n        host: r.host\n      }))\n  |> yield(name: \"mean\")\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                90
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "5m",
                    "annotations": {
                        "description": "🚨 **Estado de la Alerta** 🚨\n\nDetalles del servidor afectado:\n- 🖥️ Servidor: {{ $labels.host }}\n- ⚠️ Uso de memoria: {{ $values.B.Value }}%\n\nPor favor, revisa el estado del servidor y libera memoria si es necesario.",
                        "summary": "🚨 Alerta de memoria alta en {{ $labels.host }}: Uso superior al 90%"
                    },
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "grafana-default-email"
                    }
                },
                {
                    "uid": "be6q4s2a22ku8a",
                    "title": "Disco>85%",
                    "condition": "C",
                    "data": [
                        {
                            "refId": "A",
                            "relativeTimeRange": {
                                "from": 600,
                                "to": 0
                            },
                            "datasourceUid": "fe2r5unjgi3uoa",
                            "model": {
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "query": "from(bucket: \"DatosPrueba\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"disk\")\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\") // Nos centramos solo en el porcentaje de disco usado\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")\n",
                                "refId": "A"
                            }
                        },
                        {
                            "refId": "B",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "B"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "A",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "reducer": "last",
                                "refId": "B",
                                "type": "reduce"
                            }
                        },
                        {
                            "refId": "C",
                            "relativeTimeRange": {
                                "from": 0,
                                "to": 0
                            },
                            "datasourceUid": "__expr__",
                            "model": {
                                "conditions": [
                                    {
                                        "evaluator": {
                                            "params": [
                                                85
                                            ],
                                            "type": "gt"
                                        },
                                        "operator": {
                                            "type": "and"
                                        },
                                        "query": {
                                            "params": [
                                                "C"
                                            ]
                                        },
                                        "reducer": {
                                            "params": [],
                                            "type": "last"
                                        },
                                        "type": "query"
                                    }
                                ],
                                "datasource": {
                                    "type": "__expr__",
                                    "uid": "__expr__"
                                },
                                "expression": "B",
                                "intervalMs": 1000,
                                "maxDataPoints": 43200,
                                "refId": "C",
                                "type": "threshold"
                            }
                        }
                    ],
                    "noDataState": "NoData",
                    "execErrState": "Error",
                    "for": "1m",
                    "annotations": {
                        "description": "🚨 **Estado de la Alerta** 🚨\n\nDetalles del servidor afectado:\n- 🖥️ Servidor: {{ $labels.host }}\n- ⚠️ Uso del disco: {{ $values.B.Value }}%\n\nPor favor, revisa el estado del servidor y libera espacio en disco si es necesario.",
                        "summary": "🚨 Alerta de disco lleno en {{ $labels.host }}: Uso superior al 85%"
                    },
                    "isPaused": false,
                    "notification_settings": {
                        "receiver": "grafana-default-email"
                    }
                }
            ]
        }
    ]
}
